<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
	<context id="testTables" targetRuntime="MyBatis3">
		<commentGenerator>
			<!-- 是否去除自动生成的注释 true：是 ： false:否 -->
			<property name="suppressAllComments" value="false" />
		</commentGenerator>
		<!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
<!-- 		<jdbcConnection driverClass="com.mysql.jdbc.Driver"
			connectionURL="jdbc:mysql://localhost:3306/practice" userId="root"
			password="123456">
		</jdbcConnection> -->
		<!-- 威孚数据库 -->
<!-- 		<jdbcConnection driverClass="com.mysql.jdbc.Driver"
			connectionURL="jdbc:mysql://10.6.1.10:3306/wf" userId="root" password="swmp2016?!">
		</jdbcConnection> -->
		<!-- <jdbcConnection driverClass="oracle.jdbc.driver.OracleDriver"
			connectionURL="jdbc:oracle:thin:@127.0.0.1:1521:orcl" 
			userId="scott"
			password="wcy675600920">
		</jdbcConnection> -->
		<jdbcConnection driverClass="com.mysql.jdbc.Driver"
			connectionURL="jdbc:mysql://10.6.1.10:3306/iam" userId="root" password="swmp2016?!">
		</jdbcConnection> 
		<!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和 
			NUMERIC 类型解析为java.math.BigDecimal -->
		<javaTypeResolver>
			<property name="forceBigDecimals" value="false" />
			
		</javaTypeResolver>

		<!-- targetProject:生成PO类的位置 -->
<!-- 		<javaModelGenerator targetPackage="cn.manytag.wfServiceModule.entity"
			targetProject=".\src">
			enableSubPackages:是否让schema作为包的后缀
			<property name="enableSubPackages" value="false" />
			从数据库返回的值被清理前后的空格
			<property name="trimStrings" value="true" />
		</javaModelGenerator>
        targetProject:mapper映射文件生成的位置
		<sqlMapGenerator targetPackage="cn.manytag.wfServiceModule.dao" 
			targetProject=".\src">
			enableSubPackages:是否让schema作为包的后缀
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>
		targetPackage：mapper接口生成的位置
		<javaClientGenerator type="XMLMAPPER"
			targetPackage="cn.manytag.wfServiceModule.dao" 
			targetProject=".\src">
			enableSubPackages:是否让schema作为包的后缀
			<property name="enableSubPackages" value="false" />
		</javaClientGenerator> -->
		
		<javaModelGenerator targetPackage="cn.manytag.iamServiceModule.entity"
			targetProject=".\src">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
			<!-- 从数据库返回的值被清理前后的空格 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>
        <!-- targetProject:mapper映射文件生成的位置 -->
		<sqlMapGenerator targetPackage="cn.manytag.iamServiceModule.dao" 
			targetProject=".\src">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>
		<!-- targetPackage：mapper接口生成的位置 -->
		<javaClientGenerator type="XMLMAPPER"
			targetPackage="cn.manytag.iamServiceModule.dao" 
			targetProject=".\src">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
		</javaClientGenerator>
		
		<!-- 指定数据库表 -->
		<!-- <table tableName="receive" schema="" enableCountByExample="false"
				enableDeleteByExample="false" enableUpdateByExample="false"
				enableSelectByExample="false" selectByExampleQueryId="false">
				true就可以保证 与数据库中的字段一致
				false 就是驼峰命名法的格式
				<property  name="useActualColumnNames"  value="true" />  
		</table> -->
<!-- 		<table tableName="instance" schema="" enableCountByExample="false"
				enableDeleteByExample="false" enableUpdateByExample="false"
				enableSelectByExample="false" selectByExampleQueryId="false">
				true就可以保证 与数据库中的字段一致
				false 就是驼峰命名法的格式
				<property  name="useActualColumnNames"  value="true" />  
		</table>
		<table tableName="batch" schema="" enableCountByExample="false"
				enableDeleteByExample="false" enableUpdateByExample="false"
				enableSelectByExample="false" selectByExampleQueryId="false">
				true就可以保证 与数据库中的字段一致
				false 就是驼峰命名法的格式
				<property  name="useActualColumnNames"  value="true" />  
		</table> -->
		
<!-- 		<table tableName="outstock" schema="" enableCountByExample="false"
				enableDeleteByExample="false" enableUpdateByExample="false"
				enableSelectByExample="false" selectByExampleQueryId="false">
				true就可以保证 与数据库中的字段一致
				false 就是驼峰命名法的格式
				<property  name="useActualColumnNames"  value="true" />  
		</table>
		<table tableName="outstock_instance" schema="" enableCountByExample="false"
				enableDeleteByExample="false" enableUpdateByExample="false"
				enableSelectByExample="false" selectByExampleQueryId="false">
				true就可以保证 与数据库中的字段一致
				false 就是驼峰命名法的格式
				<property  name="useActualColumnNames"  value="true" />  
		</table> -->
		<table tableName="instance" schema="" enableCountByExample="false"
				enableDeleteByExample="false" enableUpdateByExample="false"
				enableSelectByExample="false" selectByExampleQueryId="false">
			<!-- 	true就可以保证 与数据库中的字段一致
				false 就是驼峰命名法的格式 -->
				<property  name="useActualColumnNames"  value="true" />  
		</table>
		
		<!-- 有些表的字段需要指定java类型
		 <table schema="" tableName="">
			<columnOverride column="" javaType="" />
		</table> -->
	</context>
</generatorConfiguration>
