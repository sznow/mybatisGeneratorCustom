<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.manytag.iamServiceModule.dao.OutstockMapper" >

    <resultMap id="BaseResultMap" type="cn.manytag.iamServiceModule.entity.Outstock" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="orgId" property="orgId" jdbcType="BIGINT" />
        <result column="code" property="code" jdbcType="CHAR" />
        <result column="userId" property="userId" jdbcType="BIGINT" />
        <result column="positionId" property="positionId" jdbcType="BIGINT" />
        <result column="memo" property="memo" jdbcType="VARCHAR" />
        <result column="createUser" property="createUser" jdbcType="BIGINT" />
        <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
        <result column="updateUser" property="updateUser" jdbcType="BIGINT" />
        <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, orgId, code, userId, positionId, memo, createUser, createTime, updateUser, updateTime
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select 
        <include refid="Base_Column_List" />
        from outstock
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from outstock
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="cn.manytag.iamServiceModule.entity.Outstock" >
        insert into outstock (id, orgId, code, userId, 
            positionId, memo, createUser, 
            createTime, updateUser, updateTime
            )
        values (#{id,jdbcType=BIGINT}, #{orgId,jdbcType=BIGINT}, #{code,jdbcType=CHAR}, #{userId,jdbcType=BIGINT}, 
            #{positionId,jdbcType=BIGINT}, #{memo,jdbcType=VARCHAR}, #{createUser,jdbcType=BIGINT}, 
            #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}
            )
    </insert>

    <insert id="insertSelective" parameterType="cn.manytag.iamServiceModule.entity.Outstock" >
        insert into outstock
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="orgId != null" >
                orgId,
            </if>
            <if test="code != null" >
                code,
            </if>
            <if test="userId != null" >
                userId,
            </if>
            <if test="positionId != null" >
                positionId,
            </if>
            <if test="memo != null" >
                memo,
            </if>
            <if test="createUser != null" >
                createUser,
            </if>
            <if test="createTime != null" >
                createTime,
            </if>
            <if test="updateUser != null" >
                updateUser,
            </if>
            <if test="updateTime != null" >
                updateTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="orgId != null" >
                #{orgId,jdbcType=BIGINT},
            </if>
            <if test="code != null" >
                #{code,jdbcType=CHAR},
            </if>
            <if test="userId != null" >
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="positionId != null" >
                #{positionId,jdbcType=BIGINT},
            </if>
            <if test="memo != null" >
                #{memo,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null" >
                #{createUser,jdbcType=BIGINT},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null" >
                #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="cn.manytag.iamServiceModule.entity.Outstock" >
        update outstock
        <set >
            <if test="orgId != null" >
                orgId = #{orgId,jdbcType=BIGINT},
            </if>
            <if test="code != null" >
                code = #{code,jdbcType=CHAR},
            </if>
            <if test="userId != null" >
                userId = #{userId,jdbcType=BIGINT},
            </if>
            <if test="positionId != null" >
                positionId = #{positionId,jdbcType=BIGINT},
            </if>
            <if test="memo != null" >
                memo = #{memo,jdbcType=VARCHAR},
            </if>
            <if test="createUser != null" >
                createUser = #{createUser,jdbcType=BIGINT},
            </if>
            <if test="createTime != null" >
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null" >
                updateUser = #{updateUser,jdbcType=BIGINT},
            </if>
            <if test="updateTime != null" >
                updateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="cn.manytag.iamServiceModule.entity.Outstock" >
        update outstock
        set orgId = #{orgId,jdbcType=BIGINT},
            code = #{code,jdbcType=CHAR},
            userId = #{userId,jdbcType=BIGINT},
            positionId = #{positionId,jdbcType=BIGINT},
            memo = #{memo,jdbcType=VARCHAR},
            createUser = #{createUser,jdbcType=BIGINT},
            createTime = #{createTime,jdbcType=TIMESTAMP},
            updateUser = #{updateUser,jdbcType=BIGINT},
            updateTime = #{updateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>